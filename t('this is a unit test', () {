[33mcommit 5b38864e201c727711361a549c2b7bcd1421ce36[m
Author: phamilton <phamilton@google.com>
Date:   Thu Jul 21 13:28:59 2016 -0700

    Added suggestions to the synchronized edittext fields. With the suggestion permission, added/deleted text shows up with a highlight. If the instance has a write permission, suggestions can be touched to trigger a dialog for accepting or rejecting them. Fixed bugs in SyncText that were causing incorrect ordering and patches to be dropped. Wrapped EditTextLayout in a ViewGroup class that reacts to changes in permission.
    
    Change-Id: If8b6c4a6ffd7efa6c528209460ff8009f6659a5b

[33mcommit d82272a6e00d593c02de0229d77933430fbdf79f[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Sun Aug 14 18:29:27 2016 -0700

    docs(mdtest readme): Update readme file to reflect the latest changes
    
    Update flutter revision number and modify the installation instruction
    in the readme file.  Add example pointers in readme.
    
    Change-Id: I0174c2a5698c9e27c1829ac0204a1a78fe851016

[33mcommit 1db595358a93a5e666c1905bb8430542177aa5ac[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Thu Aug 11 15:10:16 2016 -0700

    refactor(mdtest examples): refactor mdtest file structure and add two
    examples for mdtest
    
    Restructure the original mdtest and split the mdtest driver api with the
    mdtest_tools to make things more clear.  Add a examples folder that
    contains a chat app and a shared-counter app where both apps can be
    automated by mdtest.  After this refactoring, mdtest can be easily
    published on pub.
    
    Change-Id: Id256b86a47f97662c3786b291de949c1c8059d80

[33mcommit e0d90b0990d01e9e8d2b2f584f6eaac94fe1a72e[m
Author: YoungSeok Yoon <youngseokyoon@google.com>
Date:   Wed Aug 10 16:53:09 2016 -0700

    chore(travis): add travis build
    
    Adding .travis.yml file for Travis CI builds, which simply calls
    make && make test.
    
    Fixed some dependency issues along the way.
    
    Change-Id: I506a49a525c84e0608673328a5b39ae94a71e038

[33mcommit e29b00b3f0c18f65a0d72f6a437d7fb4d2a9b4d9[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Wed Aug 10 13:42:37 2016 -0700

    test(mdtest algorithms): add tests for the key algorithms in mdtest.
    
    Add test suites for some key algorithms in mdtest.  Test the device spec
    matches() function, the grouping algorithm, matching algorithm and
    coverage algorithm.
    
    Change-Id: I0f1b43e004443200b14aff2a0d915108fbe3c5c6

[33mcommit 38897123dbf34c3d7f535bfdffc0837bb522d7aa[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Mon Aug 8 15:04:17 2016 -0700

    docs(mdtest readme): Update readme file to reflect the latest changes in
    mdtest
    
    Update reademe file and add more details and explanations for the latest
    mdtest version.
    
    Change-Id: I0a096f75ae5ba2030e92dc51b4f3eeb7ffd33f34

[33mcommit 95d0339143f405d3bda6e7168fd71e2dd3d160d2[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Aug 5 14:30:42 2016 -0700

    feat(mdtest doctor): mdtest is able to detect if any dependent tool is
    not installed and provide tool installation instructions
    
    mdtest provide doctor command which checks if Dart, Pub, Flutter, ADB,
    lcov are installed and reports error as well as installation instruction
    if any of those tools is not installed.  The doctor command also checks
    if mobiledevice tool is installed if mdtest is running on Mac OS.
    mobiledevice is a commandline tool similar to ADB but does not provide
    as many features as ADB does.  However, it is the best commandline tool
    that meets mdtest's need.  genhtml is used to generate code coverage
    report and comes along with lcov.
    
    Change-Id: Iea4c7d3227d3c9bca9f7b10025b7cb54e94ec617

[33mcommit 9ab0b9f1c79c540169f361421855dcfcb540bc68[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Aug 5 13:52:03 2016 -0700

    feat(mdtest run/auto generate): mdtest is able to encode and store
    test output as json format for test report generation.  mdtest also
    implements a test report generating algorithm as well as a code
    coverage report generating algorithm.
    
    mdtest allows users to store the test output into JSON format by
    providing --save-report-data option for both `run` and `auto` command.
    Users can use --save-report-data option to specify a path to store test
    output data.  However, the --save-report-data option can only be used with
    --format=tap because of the implementation limitation.
    
    mdtest provide another command `mdtest generate` command which can
    generate test report and code covereage report.  The generate command
    support --report-type option which could be either set to `test` or
    `coverage` for test report or coverage report, respectively.
    --load-report option is provided and should points to either the test
    report in json format, or a coverage report in lcov format.  --output
    option points to the directory to generate test/coverage report.  --lib
    is points to the source code library related to the coverage report and
    can only be specified if --report-type is set to `coverage`.
    
    Change-Id: I5f108888340a83ad537ef2c5fd42991c2e5d6396

[33mcommit 2a0452b452c41701c35cf9ef29359a1edde397ad[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Tue Aug 2 13:21:55 2016 -0700

    feat(mdtest run/auto): mdtest supports iOS devices
    
    mdtest now supports running flutter apps on iOS devices.  From this
    point, mdtest can launch applications on both Android and iOS system.
    Since there is no command line tools that can get iOS device properties
    like ADB does for Android, mdtest stores a device product ID to device
    spec mapping and query the mapping for missing iOS device properties
    like screen size, etc.  Fortunately, there is limited number of iOS
    devices and the mapping can be built fairly easy compared to Android.
    
    mdtest now uses a new third party tool called mobiledevice
    https://github.com/imkira/mobiledevice to get iOS device properties.
    But since not all properties are supported, a device property mapping is
    needed.
    
    The only missing feature for iOS device is that mdtest cannot wakeup and
    unlock an iOS device from command line due to security issues.  All
    other features are supported for both Android and iOS devices.
    
    Since api-level property is only supported in Android and it is related
    to the OS version, mdtest discards that property and only keep
    os-version.  Also, os-version is related to platform type (e.g. Android
    or iOS), so mdtest adds another spec property "platform" in the test
    spec.  "platform" property must be specified for other properties that
    depend on platform type.  In the current version, only "os-version"
    depends on "platform".
    
    Change-Id: Id7a310ef8307cfe544def0dab6810f3c23e0cd89

[33mcommit f0cc7dd304aa5cee74618531d6ba4e0afcc30cf3[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Jul 29 12:57:59 2016 -0700

    feat(mdtest create): mdtest helps users to create a template test spec
    and provide relevant instructions on how to create valid spec from
    the template
    
    mdtest now support "mdtest create" command which is used to create
    either a spec or a test template for the user.  --spec-template option
    is added to specify the path to the template spec;  --test-template
    option is added to specify the path to the template test.
    
    mdtest will print out information regarding to each attribute in the
    test spec and provide instructions to make the template a real test
    spec.  mdtest will also print out some guidance for creating test
    scripts and the test template is detailed with more instructions.
    
    Now mdtest return 1 if some test fails.
    
    Change-Id: Ie88635c2274bd6acf6c25afa89b281d8cdeb4652

[33mcommit 7606470b65827b2eb18971d704ffc3ddff7427d0[m
Author: phamilton <phamilton@google.com>
Date:   Thu Jul 21 13:28:59 2016 -0700

    Restructured the blessings(permission groups) architecture to have proper inheritance.
    The bless() method must now have a root Blessing
    and any changes in a blessings permissions effects all of its children.
    
    Hooked up permission requests. An application instance can request specific permissions
    using PermissionManager.request(Permission request). Those requests can be handled by
    applications listen using :
    PermissionManager.addOnRequestListener(PermissionManager.OnRequestListener)
    The current implementation generates a notification for each request.
    
    Added a public blessing to each email message.
    Added pull message action to the discovered device notifications.
    
    Integrated the iconify library for handling material design icons.
    This removes the need to import a set of pngs for each icon.
    
    Change-Id: I1ce61f43d2e84a70b3066e0e9c6f85a935721d2b

[33mcommit 6d1e2f33c2daadd14a503926bcdf9b93c44161f9[m
Author: p-hamilton <peter.p.hamilton@gmail.com>
Date:   Wed Jul 27 10:09:15 2016 -0700

    TBR: Removed reference to corp.google in permissions/README.md
    
    Change-Id: I0d648cc8336b8be57bca4e2bffaaa5491f1655bd

[33mcommit ff89a99c7d202e1f2959ac8a98b9d4df7a90fc75[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Tue Jul 26 14:25:15 2016 -0700

    feat(mdtest driver api): mdtest computes the maximum app-device coverage
    score and generate app-device hitmap
    
    mdtest is now able to report a app-device coverage matrix that shows
    both reachable and unreachable app-device paths before test execution.
    mdtest also reports an app-device hitmap based on the real execution
    and spits the maximum app-device coverage score as well as the
    percentage of app-device paths that are covered by the execution out of
    all reachable app-device paths.  The hitmap as well as the app-device
    coverage score helps users to discover under which app-device combination
    some test executions fail.  It also tells the user which app-device
    combination is tested and which is not.
    
    mdtest also supports --brief flag which will only report test execution
    output if set to true.
    
    mdtest now does not support specifying test paths from test spec.  test
    paths can only be specified from the command line.
    
    Change-Id: I4b414d0f1efa17948a8b2846586f6e304a417e31

[33mcommit c07e02cd23eadf0dcd3d4400b00c2dfb47e5d47b[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Jul 22 15:21:21 2016 -0700

    feat(mdtest driver api): provide mdtest driver API that allows users to
    access flutter drivers by device nickname
    
    mdtest provides DriverMap class that helps users to access flutter
    drivers through device nickname.  The API supports lazy initialization
    which means the flutter driver instance will only be initialized the
    first time the user wants to access it.  Singleton and factory pattern
    is used to prevent redundant readings of the temporary spec file.
    
    Add some code for previous submitted feature.  mdtest should now support
    'os-version' and 'api-level' in the test spec.
    
    Change code coverage report location.
    
    Change-Id: I8a64629060071f993e15a64e6c08833211c1f96b

[33mcommit 582ba530a142d637d716393099a57509d401d487[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Wed Jul 20 10:44:00 2016 -0700

    feat(mdtest auto): add more options to group devices
    
    mdtest supports --groupby option which allows users to provide grouping
    keyword for mdtest to group devices and run tests under different device
    settings based on app-device coverage.  --groupby supports options like
    'device-id', 'model-name', 'os-version', 'api-level' and 'screen-size'.
    
    Fix minor bug for mdtest script to deal with the first run.
    
    Change-Id: I54a6b91fcd40d995e6413b3d556c3c1fc526c6a5

[33mcommit 4efffb23f6a83228a1229cde9244f11c31b91c01[m
Author: phamilton <phamilton@google.com>
Date:   Tue Jul 19 17:29:22 2016 -0700

    Added the /permissions directory. permissions contains an example android application that provides a backend for managing permissions in between  devices in cross-device applications. The backend uses Firebase to communicate between different devices. example/EmailActivity uses this backend to cast email messages to other devices.
    
    Change-Id: I19a390758629973851219c2fd8039f021ddc3462

[33mcommit 79d70339ac0c2dec84caeb7fa1313356cb5ec799[m
Author: phamilton <phamilton@google.com>
Date:   Tue Jul 19 17:23:32 2016 -0700

    added android application skeleton. Necessary because of gerrit commit size constraints
    
    Change-Id: I8d125414c11418a78a2d3d36700822a4fe026fa6

[33mcommit cfa5c6b5451ee4a282138d413426bda8f9d315c8[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Mon Jul 18 10:43:24 2016 -0700

    feat(mdtest run/auto): add test spec validation checker
    
    Check if test spec meets the requirements.  If user does not specify any
    valid test paths neither from the test spec nor from the command line,
    report error.  If 'devices' property is not specified, report error.  If
    no device spec is specified, report error.  If screen size property is
    not one of 'small', 'normal', 'large' and 'xlarge', report error.  If
    app-root is not specified or is not a directory, report error.  If
    apppath is not specified or is not a file, report error.
    
    Change-Id: I37a6f82aa926ab09d417f77c0eb8948c60907b72

[33mcommit d31f0eaf59e0aff82fa47438e005a2f178f6e65b[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Mon Jul 18 09:39:53 2016 -0700

    docs(mdtest readme): Edit readme file to match the latest version of
    mdtest
    
    Add readme file to explain what is mdtest and how to use it.
    
    Change-Id: I6b4195988480494909aff353afeb6e861896e678

[33mcommit 704befdfd3d20d77e81b07b1f82f317fe0b31198[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Jul 15 12:34:15 2016 -0700

    feat(mdtest run/auto): support specifying test script paths from command
    line arguments.
    
    mdtest now supports reading test suites paths from command line
    arguments.  It will treat anything besides the supported command line
    flag/option as the path pattern for the test scripts.  Users can specify
    multiple glob patterns for their test scripts.
    
    Now mdtest is able to find test script paths from both test spec and
    command line arguments.  Users can specify glob patterns in both test spec
    or command line.  The convention is that relatively stable test script
    paths should be specified in the test spec and other frequently modified
    test script should be specified from the command line.
    
    The behavior of the current implementation is that test paths in the
    test spec will be executed before test paths specified in the command line.
    Duplicated test paths will be ignored and only the first test path
    position is kept.  If a user specifies multiple glob patterns, the test
    paths corresponding to each glob pattern will be executed in the order
    of their appearance.  However, the order of executions for test paths
    within the same glob pattern is not guaranteed.
    
    Change-Id: Ibefc789e4c17cbf12ecd054171e95c1099d6f0de

[33mcommit a55c32955eade6ba12e73847ecb5beb9db097c18[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Thu Jul 14 10:51:52 2016 -0700

    feat(mdtest run/auto): support TAP (test anything protocol) test output
    format and add --verbose flag for mdtest
    
    mdtest now is able to report test output in TAP format.  If --format
    option is set to '--format=tap', mdtest will run
    "pub run test --reporter json" to collect test output in json format
    and transform json output into tap output on the fly.  The default
    behavior is '--format=none' which use the standard dart test output.
    
    mdtest now support --verbose flag.  If -v or --verbose is specified,
    printTrace() will direct output to the standard error stream.
    Otherwise, printTrace() does nothing.
    
    Replace some print invocation with logging print.
    
    Change-Id: Ie98d7b61393a368ec06e6ad536d2226973e2d322

[33mcommit 27223c43282e1910bc6316c7c425fd3512890d14[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Tue Jul 12 15:00:07 2016 -0700

    feat(mdtest run/auto): support specifying multiple test scripts in the
    test spec file and add --coverage option for mdtest to report code
    coverage
    
    mdtest now supports the execution of multiple test scripts.  This
    feature can be used if running multiple test scripts only requires an
    application to be started once before the first execution.  Subsequent
    tests will not cause the application restart.
    
    Code coverage support is also added in mdtest for both 'run' and 'auto'
    commands.  mdtest is able to read code coverage hitmap from the
    application after test execution and create a coverage info file in lcov
    format so that coverage report tools like lcov/genhtml can be used to
    create coverage report for the application.
    
    Change-Id: I85cdb4df5112f7edb62397f552342b245c37d0c2

[33mcommit a27f933c8ccaa19f88e987ba89cea8c832062320[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Fri Jul 8 11:40:22 2016 -0700

    feat(mdtest run/auto): unlock devices if necessary and uninstall
    testing apps after test execution.  support 'screen-size' property
    in test spec.
    
    Wake up and unlock the device if it is locked.  This is good for
    integration testing, where the devices are locked after not being
    used for a long time.  Uninstall tested apps after test execution.
    This feature is supported to avoid too many apps running in
    background if a device is used to test multiple different apps.
    
    Also add screen-size support in test spec.
    
    Change-Id: Id0f9a209b2da15d944fc383442fc804789974118

[33mcommit d61db02d6493ee7afedae83c626a628f55321147[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Wed Jul 6 15:38:55 2016 -0700

    feat(mdtest auto): introduce app-device coverage concept
    
    Introduce app-device coverage concept.  We first cluster device specs
    based on the app path, all specs with the same app path is clustered
    together.  We also cluster devices based on model name, devices with
    same model name is clustered together.  The clustering rule can be
    easily changed.  In the current version, only the above clustering rule
    is supported.  Some app-device coverage definition:
    
    * Coverage Definition:
      If an app in an app cluster A is installed and run on a device in a
      device cluster D, then we say app cluster A covers device cluster D
      and the app-device path A-D is covered.
    
    * Spec-Device Mapping Suite Definition:
      A spec-device mapping suite is defined as the union of all spec to
      device mappings for the same test script.  For example, a single
      application can be run on different types of devices.  In such case,
      the test script and spec never change but the spec-device mapping is
      changed so an application can be run on different devices.
    
    * Full Coverage Definition:
      If a test script is repeatedly executed according to a spec-device
      mapping suite S, in all such runs, if every app cluster covers
      every device cluster, then we say the spec-device mapping suite S
      gives full app-device coverage.
    
    * Coverage Score Definition:
      Suppose there are N app clusters, M device clusters, and a
      spec-device mapping suite S covers X app-device paths, then the
      coverage score is computed by C(S) = X / (N * M)
    
    An algorithm is implemented to find the minimum set of spec-device
    matches that gives the maximum app-device coverage.  A new command
    "mdtest auto ..." is implemented to invoke the algorithm.
    
    Change-Id: Idcc7e33daba4754d26e409d8701f8e3b857935de

[33mcommit e1057af1b627138fa6e659f57538c80f53f6d5b9[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Wed Jun 29 10:37:38 2016 -0700

    feat(mdtest run): support device matching and test script automation
    
    Automatically match each device spec with an available device, then
    launch applications on devices based on the matching.  After all
    applications are correctly installed and launched, run test script
    which automates the UI.  mdtest requires the user to use its
    driver/driver_util.dart to create flutter driver.
    
    Change-Id: Ib3b895dd162ca5584b2a208dedaaed6535ed91c2

[33mcommit 009af8397296eef2c888351bca1c14daccff2fc4[m
Author: Kaiyuan Wang <kaiyuanw@google.com>
Date:   Mon Jun 27 13:02:02 2016 -0700

    feat(mdtest run): initiate mdtest tool and add support for run command
    
    Create mdtest tool for testing multi-device applications.  Currently
    it supports only part of the function of 'mdtest run' command.  The
    run command is able to detect connected device properties and print
    them on the terminal.
    
    Change-Id: I95d55319b7cf3873eafac825c24d9e039c5ebb76

[33mcommit 84cefa1816bbd55524055c1e0ee924c7bfd65555[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Jun 8 13:37:56 2016 -0700

    Adding text echo UI
    
    Also fixing up discovery logic.
    
    Change-Id: Ic30e3e0ab6d547850cd3b41504daef5edfa202fe

[33mcommit 4d7e077e3b252574fd3c154a975f71ecaa2c953a[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Jun 8 11:36:10 2016 -0700

    Initial commit of Distro example
    
    This commit is based on the (obsolete) hello_android example (now
    hello_services). It uses V23 for RPC and mount table globbing for
    discovery (since global discovery is not exposed in Java and local
    discovery works only through mDNS right now). It does not actually cast
    components yet, but presents a list of (globally) available cast
    targets.
    
    This commit is subject to v.io/i/1356, and the VDL Java generation is
    commented out.
    
    Change-Id: Iba5116324109c48d7ab009d3d3759f6bc469d342

[33mcommit 3ba816ace03d3145db45ac979e333e1634ca4b09[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Fri May 27 19:07:00 2016 -0700

    fix(build): fixes broken test.
    
    * Updates flutter to include recent dart changes.
    
    Fixes vanadium/build#81
    
    Change-Id: Id7c42f744bb8bc7dbb317f30bfb48fa63f674575

[33mcommit 1ccec13a14f52a44d70eeee261511df8ca713090[m
Author: Ross Wang <rosswang@google.com>
Date:   Thu May 26 16:47:01 2016 -0700

    TBR: Purging Java example
    
    Change-Id: Ic7b236ff91a6304e5b32eba984035ed2468414de

[33mcommit 1cb0e23961154dbf19db6b43ce6d05282cf7233e[m
Author: David Yang <dayang@google.com>
Date:   Tue May 24 10:48:17 2016 -0700

    chore(.gitignore): update .gitignore
    
    * change .gitignore to account for nested flutter iOS build files
    
    Change-Id: Ibd04dc0199e2d0158a5a8029e14ac4f1cc511ea2

[33mcommit 18fdb821b7fecae3ecbadb93d90c09d3612a233c[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon May 23 11:21:57 2016 -0700

    chore(make): adds basic workflow tasks
    
    * Adds tasks for formatting, linting, and testing.
    * Vendors flutter to a specific version.
    
    Some refinement is needed and we will need to explore how to get the Atom IDE support for dart and flutter to play nice with the Vendored flutter version.
    
    Closes #2
    
    Change-Id: I7a8f90951d06dc2646962f09ab9181a888e9735e

[33mcommit 9460b749e9f9b28196a4f08d311aca04c0c3fe04[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Fri May 20 16:55:02 2016 -0700

    refactor(examples/todos): update flutter code
    
    This is an initial pass to get the todo example into a condition that allows
    multiple contributors to work on it.
    
    * Updates flutter code to match version: cc93170894
    * Adds rough screens based on the Vanadium Todos example
    
    Remaing tasks are being tracked in vanadium/baku#1 and will follow as separate
    CLs.
    
    Change-Id: I2b1fb33fb5addfbdb844ae0163c56b724ed72ffa

[33mcommit dfe31357b236e8e68e54d7bd2bcc62e540c27796[m
Author: Nicolas Lacasse <nlacasse@google.com>
Date:   Mon Apr 4 16:09:34 2016 -0700

    TBR: baku: Make all versions 'v23-0.1'.
    
    Change-Id: I3dc54a311404ee9ec5fe43237cd38045f385c81d
    MultiPart: 14/27

[33mcommit fa42073314fb80e1813e0955fd9bbfd74579c953[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Mar 9 12:06:07 2016 -0800

    TBR: Baku 0.10.0
    
    Change-Id: I40173eab6112a9a2ca7bb7745a6383775394361f

[33mcommit 7f01cc1be9a2aac7ad4169f511399b97cb56c770[m
Author: Ross Wang <rosswang@google.com>
Date:   Mon Mar 7 15:27:24 2016 -0800

    TBR: Upgrading to Baku 0.9.0
    
    Change-Id: Iadca4a58f18722bf5a31799951b711701fb51a43

[33mcommit f02871ebe760ab1fc1eab51773e2363a5b8c67c6[m
Author: Ross Wang <rosswang@google.com>
Date:   Thu Feb 25 13:43:02 2016 -0800

    TBR: HelloBaku - single-line EditText
    
    Change-Id: Ie10a944d74316dc29e2d7e500ad128957f134ed7

[33mcommit a804572746ff8e51da2325c042d7fe161d2f467b[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Feb 24 16:34:37 2016 -0800

    Defaulting to bidiriectional bindings
    
    Credit to afergan@ for this more elegant approach!
    
    Change-Id: I69b27a434a9cb7c32b8ba4a3a340e3ff4b9ebff5

[33mcommit 205c1a87c627e496a4308e11264c4e1badb9fe7b[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Feb 24 15:24:46 2016 -0800

    Response to API usability study 2016.02.23
    
    Making HelloBaku examples clearer. We now use a single data binding and
    show an example of a write to Syncbase in response to a button
    press. We've also renamed and commented on things that were unclear.
    
    Change-Id: Idfaf063a3e21e00638cc5205ab2dc07e9be330b1

[33mcommit 44d7aeffee86f8fd336936ef4abdd5136cb0afe7[m
Author: Ross Wang <rosswang@google.com>
Date:   Mon Feb 22 20:22:17 2016 -0800

    TBR: Upgrading to Baku 0.7.0
    
    Change-Id: Ic54039241388654d7d5a724abc0222f55d0fb601

[33mcommit 60d7ee8c31da8786afde660bb8b9ed4d325b4395[m
Author: Ross Wang <rosswang@google.com>
Date:   Mon Feb 1 18:40:23 2016 -0800

    TBR - updating API name for unreleased dependency
    
    Change-Id: I7f2054afb5278fc937569cba943a5283040deac1

[33mcommit 695dc787cced8d271f78a859007bba6911913c77[m
Author: Ross Wang <rosswang@google.com>
Date:   Wed Jan 27 13:02:29 2016 -0800

    Adding alternate integration samples
    
    Change-Id: I33bb8eb157824cbe9344bdf2315e8a92a35023e7

[33mcommit cdbd2c10d83cccd4fbe29a2033449745d65db8e3[m
Author: Adam Sadovsky <asadovsky@gmail.com>
Date:   Fri Feb 5 17:20:36 2016 -0800

    TBR: baku: update 'docs' references to point to vanadium.github.io
    
    MultiPart: 14/27
    
    Change-Id: Icdb6cd166d3a6f3f9007b858dfb498cafb658e81

[33mcommit c4b436093ab3a4ba79ff200c5304dd4732a866ad[m
Merge: 3770c3b 811e8e9
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Wed Jan 27 21:11:43 2016 +0000

    Merge "baku/todos: adds basic CRUD features"

[33mcommit 3770c3bc4646b22ec58b19e8ad6a5cfa4b5b6640[m
Author: Ross Wang <rosswang@google.com>
Date:   Tue Jan 26 18:49:03 2016 -0800

    Adding Hello Baku
    
    Change-Id: Ie39e966da1402ddfad7a7030c7ea38244432715f

[33mcommit 811e8e99b4da472ba6172b04f9a977607d29cd32[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Wed Jan 27 12:34:03 2016 -0800

    baku/todos: adds basic CRUD features
    
    Todo items can be added and removed from the list. Items can be completed or
    removed by dragging to the left or right. This work still needs some polish
    (animations etc.) and only the basic operations to get a working version are
    in this CL.
    
    Change-Id: I92e25ba96484fba17adf6bde73b817108831ad75

[33mcommit db88d55916051254427dbd1391ebe90a97a41314[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 11 14:41:00 2016 -0800

    baku/examples: Adds a quick flutter based Todo app.
    
    Change-Id: If1ccf9a7f47ba585eb9faeb21199d6c8f22f6519

[33mcommit 82fab790b20497fa353376d9cd71d26dcb1e9c59[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 16:00:03 2016 -0800

    Adds CONTRIBUTING.md

[33mcommit 6458e5fc321a99ba6dd65ec52643106fdc748bc1[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 15:45:41 2016 -0800

    Adds copyright files

[33mcommit 81ea28dd5f2a121122441cb6e541095a0a2ae217[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 13:55:14 2016 -0800

    Adds stub clean task

[33mcommit fd8ae763df537f95bbb6e346e06bafde316f8ed1[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 13:53:41 2016 -0800

    Adds stub Makefile

[33mcommit f606f7ab047b5a242e0a1e0ea4a90a6c6c4c2a0b[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 13:51:29 2016 -0800

    Adding .jiri to .gitignore.

[33mcommit a0a54436f1a90f0fac21db1ed3e90c9bcd725c13[m
Author: Jason Campbell <jasoncampbell@google.com>
Date:   Mon Jan 4 21:43:54 2016 +0000

    Initial empty repository
